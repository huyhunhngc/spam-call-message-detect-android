name: Deploy

on:
  workflow_call:
    inputs:
      tag:
        description: 'Tag for release'
        required: true
        type: string
jobs:
  lint_create_workflow_dispatch:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 11

      - uses: gradle/gradle-build-action@v2
        with:
          cache-read-only: ${{ github.ref != 'refs/heads/develop' }}

      - name: reviewdog
        uses: reviewdog/action-suggester@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tool_name: spotless
          level: error
          fail_on_error: true
  build_app_distribution:
    name: Build And Upload APK distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: gradle/gradle-build-action@v2
        with:
          cache-read-only: true
      - name: Generate Release APK
        run: ./gradlew assembleRelease
      - uses: r0adkll/sign-android-release@v1
        name: Sign app APK
        id: sign_app
        with:
          releaseDirectory: app/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}

      - name: Create release on Github
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          APK_PATH: app/build/outputs/apk/release
        run: |
          mv ${{ env.APK_PATH }}/app-release-unsigned.apk \
            ${{ env.APK_PATH }}/app-release-${{ env.TAG_NAME }}.apk
          echo 'RELEASE_URL<<EOF' >> $GITHUB_ENV
          gh release create ${{ env.TAG_NAME }} \
            --generate-notes \
            ${{ env.APK_PATH }}/app-release-${{ env.TAG_NAME }}.apk >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV

      - name: Get release note
        run: |
          mkdir -p distribution/whatsnew
          gh release view --json body -q '.body'  > distribution/whatsnew/changelog.txt

      - uses: wzieba/Firebase-Distribution-Github-Action@v1
        name: upload artifact to Firebase App Distribution
        with:
          appId: ${{ secrets.APP_ID }}
          serviceCredentialsFileContent: ${{ secrets.APP_DISTRIBUTION_CREDENTIAL }}
          groups: idCallerAppTester
          releaseNotesFile: distribution/whatsnew/changelog.txt
          file: ${{ steps.sign_app.outputs.signedReleaseFile }}
